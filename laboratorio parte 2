#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>

 int main()
 {
 pid_t pid;

 /* fork a child process */
 pid = fork();

 if (pid < 0) { /* error occurred */
 fprintf(stderr, "Fork Failed\n");
 return 1;
 }
 else if (pid == 0) { /* child process */
 printf("I am the child %d\n",pid);
 execlp("/bin/ls","ls",NULL);
 }
 else { /* parent process */
 /* parent will wait for the child to complete */
 printf("I am the parent %d\n",pid);
 wait(NULL);

 printf("Child Complete\n");
 }

 return 0;
 }
Você é capaz de identificar os trechos executados por pai e filho?
pai:22,23.
filho:17,18,25,28

#include <stdio.h>

 int main()
{
printf("%d\n",getpid());
fork();
printf("%d\n",getpid());


 fork();
 printf("%d\n",getpid());

 #include  <stdio.h>
#include  <string.h>
#include  <sys/types.h>

int main()
{   
    pid_t pid;
    int x=2;
    int y=3;
    pid=fork();
     if(fork()==0){
                printf( x+y);
        } else {
                printf(y=x);
        }
 }   

 return 0;
 }
Quantos processos serão criados?
quatro filhos e um processo pai.
EXERCÍCIO: Construa um exemplo, na linguagem C, onde os processos pai e filho trocam
algum tipo de mensagem.

#include  <stdio.h>
#include  <string.h>
#include  <sys/types.h>

int main()
{   
    pid_t pid;
    int x=2;
    int y=3;
    pid=fork();
     if(fork()==0){
                printf( x+y);
        } else {
                printf(y=x);
        }
 }   
